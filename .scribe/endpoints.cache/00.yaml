## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: sanctum/csrf-cookie
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Return an empty response simply to trigger the storage of the CSRF cookie in the browser.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: ''
        headers:
          cache-control: 'no-cache, private'
          vary: Origin
          set-cookie: 'XSRF-TOKEN=eyJpdiI6InVYTHVDRXRsNGdsOXp4YXB6c2JKRkE9PSIsInZhbHVlIjoia0RkYjJ0YjZqMHdYOE94NFdvYll6SlpTN1ZUdm1GbFR6d0xTYmVwM2lBNzh4bENNU1JrSlBVb0VZZ016N3NEZFBUcGRyeTlmQXdEVXRkV3QzQWtrSzE0aFBBdmxUd3F5VGUxL3VSWVVRK3krcFo3VzVnMXFVZmxvdTA0eWpMdVEiLCJtYWMiOiIzYTg0YzM1YTA1OGE0YTIyY2NjN2QxZjMzODAxOTlkYTk0Y2M5MDgwZGQ3YTNkYmJhYzhhYTI1NjNhNDZjYWUyIiwidGFnIjoiIn0%3D; expires=Fri, 14 Mar 2025 18:38:43 GMT; Max-Age=7200; path=/; domain=localhost; samesite=lax; helium_session=eyJpdiI6IjIwd3NnT1dJV1UwaW1hKzRaSFExYnc9PSIsInZhbHVlIjoiQ3JadXN0c3VCSVpOL0ZHTWFPUGV6dVJBRU9aaVF4OWsrSnJzY1puKzF4QkE1TEV4bm5PUzM0U0xicTNrZjBQcnVPL09FSUlVbmk5VDczRkFVbmsyVUF2bThmOTlwbDNkU0hVOGlmQW95ME1PQXhITlR0OW82R1pteG5VM0ttVTEiLCJtYWMiOiIxNDY5MzVmMjZjOTYwZTNhODZmMDNkYmZkYmZlODIwZTZkZjY2ZWU0NzU4YjZjOWZiMzlhYzg0MDNkN2I2YWJlIiwidGFnIjoiIn0%3D; expires=Fri, 14 Mar 2025 18:38:43 GMT; Max-Age=7200; path=/; domain=localhost; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v3ZVcbd1EP46e6a85hkafDg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: _ignition/health-check
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"can_execute_commands":true}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer E5gVdb8Zfa1ckaPhD6ev463'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: _ignition/execute-solution
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      solution:
        name: solution
        description: ''
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      parameters:
        name: parameters
        description: ''
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      solution: ut
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vhek8dcEb6PfZ45g6Da31aV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: _ignition/update-config
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      theme:
        name: theme
        description: ''
        required: true
        example: auto
        type: string
        enumValues:
          - light
          - dark
          - auto
        exampleWasSpecified: false
        custom: []
      editor:
        name: editor
        description: ''
        required: true
        example: consectetur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      hide_solutions:
        name: hide_solutions
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      theme: auto
      editor: consectetur
      hide_solutions: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Da453dav1Phk6gcefbE86ZV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/domain/settings
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"company_legalname":"Freuwort","company_logo":"http:\/\/localhost:8000\/storage\/branding\/logo.png","company_name":"Freuwort","company_slogan":null,"units":[{"code":"carton","name":"Carton","symbol":"","type":"numeric"},{"code":"piece","name":"Piece","symbol":"","type":"numeric"},{"code":"meter","name":"Meter","symbol":"m","type":"length"},{"code":"mile","name":"Mile","symbol":"mi","type":"length"},{"code":"centimeter","name":"Centimeter","symbol":"cm","type":"length"},{"code":"foot","name":"Foot","symbol":"ft","type":"length"},{"code":"millimeter","name":"Millimeter","symbol":"mm","type":"length"},{"code":"yard","name":"Yard","symbol":"yd","type":"length"},{"code":"inch","name":"Inch","symbol":"in","type":"length"},{"code":"kilometer","name":"Kilometer","symbol":"km","type":"length"},{"code":"square_foot","name":"Square Foot","symbol":"ft\u00b2","type":"area"},{"code":"square_inch","name":"Square Inch","symbol":"in\u00b2","type":"area"},{"code":"square_kilometer","name":"Square Kilometer","symbol":"km\u00b2","type":"area"},{"code":"square_meter","name":"Square Meter","symbol":"m\u00b2","type":"area"},{"code":"square_yard","name":"Square Yard","symbol":"yd\u00b2","type":"area"},{"code":"centiliter","name":"Centiliter","symbol":"cl","type":"volume"},{"code":"cubic_centimeter","name":"Cubic Centimeter","symbol":"cm\u00b3","type":"volume"},{"code":"cubic_foot","name":"Cubic Foot","symbol":"ft\u00b3","type":"volume"},{"code":"cubic_inch","name":"Cubic Inch","symbol":"in\u00b3","type":"volume"},{"code":"cubic_kilometer","name":"Cubic Kilometer","symbol":"km\u00b3","type":"volume"},{"code":"cubic_meter","name":"Cubic Meter","symbol":"m\u00b3","type":"volume"},{"code":"cubic_millimeter","name":"Cubic Millimeter","symbol":"mm\u00b3","type":"volume"},{"code":"liter","name":"Liter","symbol":"l","type":"volume"},{"code":"milliliter","name":"Milliliter","symbol":"ml","type":"volume"},{"code":"gram","name":"Gram","symbol":"g","type":"mass"},{"code":"kilogram","name":"Kilogram","symbol":"kg","type":"mass"},{"code":"pound","name":"Pound","symbol":"lb","type":"mass"},{"code":"tonne","name":"Tonne","symbol":"t","type":"mass"},{"code":"hour","name":"Hour","symbol":"h","type":"time"},{"code":"minute","name":"Minute","symbol":"min","type":"time"},{"code":"second","name":"Second","symbol":"s","type":"time"},{"code":"celsius","name":"Celsius","symbol":"\u00b0C","type":"temperature"},{"code":"fahrenheit","name":"Fahrenheit","symbol":"\u00b0F","type":"temperature"}],"countries":[{"code":"af","alpha_3":"afg","name":"Afghanistan"},{"code":"al","alpha_3":"alb","name":"Albania"},{"code":"dz","alpha_3":"dza","name":"Algeria"},{"code":"ad","alpha_3":"and","name":"Andorra"},{"code":"ao","alpha_3":"ago","name":"Angola"},{"code":"ag","alpha_3":"atg","name":"Antigua and Barbuda"},{"code":"ar","alpha_3":"arg","name":"Argentina"},{"code":"am","alpha_3":"arm","name":"Armenia"},{"code":"au","alpha_3":"aus","name":"Australia"},{"code":"at","alpha_3":"aut","name":"Austria"},{"code":"az","alpha_3":"aze","name":"Azerbaijan"},{"code":"bs","alpha_3":"bhs","name":"Bahamas"},{"code":"bh","alpha_3":"bhr","name":"Bahrain"},{"code":"bd","alpha_3":"bgd","name":"Bangladesh"},{"code":"bb","alpha_3":"brb","name":"Barbados"},{"code":"by","alpha_3":"blr","name":"Belarus"},{"code":"be","alpha_3":"bel","name":"Belgium"},{"code":"bz","alpha_3":"blz","name":"Belize"},{"code":"bj","alpha_3":"ben","name":"Benin"},{"code":"bt","alpha_3":"btn","name":"Bhutan"},{"code":"bo","alpha_3":"bol","name":"Bolivia, Plurinational State of"},{"code":"ba","alpha_3":"bih","name":"Bosnia and Herzegovina"},{"code":"bw","alpha_3":"bwa","name":"Botswana"},{"code":"br","alpha_3":"bra","name":"Brazil"},{"code":"bn","alpha_3":"brn","name":"Brunei Darussalam"},{"code":"bg","alpha_3":"bgr","name":"Bulgaria"},{"code":"bf","alpha_3":"bfa","name":"Burkina Faso"},{"code":"bi","alpha_3":"bdi","name":"Burundi"},{"code":"cv","alpha_3":"cpv","name":"Cabo Verde"},{"code":"kh","alpha_3":"khm","name":"Cambodia"},{"code":"cm","alpha_3":"cmr","name":"Cameroon"},{"code":"ca","alpha_3":"can","name":"Canada"},{"code":"cf","alpha_3":"caf","name":"Central African Republic"},{"code":"td","alpha_3":"tcd","name":"Chad"},{"code":"cl","alpha_3":"chl","name":"Chile"},{"code":"cn","alpha_3":"chn","name":"China"},{"code":"co","alpha_3":"col","name":"Colombia"},{"code":"km","alpha_3":"com","name":"Comoros"},{"code":"cg","alpha_3":"cog","name":"Congo"},{"code":"cd","alpha_3":"cod","name":"Congo, Democratic Republic of the"},{"code":"cr","alpha_3":"cri","name":"Costa Rica"},{"code":"ci","alpha_3":"civ","name":"C\u00f4te d''Ivoire"},{"code":"hr","alpha_3":"hrv","name":"Croatia"},{"code":"cu","alpha_3":"cub","name":"Cuba"},{"code":"cy","alpha_3":"cyp","name":"Cyprus"},{"code":"cz","alpha_3":"cze","name":"Czechia"},{"code":"dk","alpha_3":"dnk","name":"Denmark"},{"code":"dj","alpha_3":"dji","name":"Djibouti"},{"code":"dm","alpha_3":"dma","name":"Dominica"},{"code":"do","alpha_3":"dom","name":"Dominican Republic"},{"code":"ec","alpha_3":"ecu","name":"Ecuador"},{"code":"eg","alpha_3":"egy","name":"Egypt"},{"code":"sv","alpha_3":"slv","name":"El Salvador"},{"code":"gq","alpha_3":"gnq","name":"Equatorial Guinea"},{"code":"er","alpha_3":"eri","name":"Eritrea"},{"code":"ee","alpha_3":"est","name":"Estonia"},{"code":"sz","alpha_3":"swz","name":"Eswatini"},{"code":"et","alpha_3":"eth","name":"Ethiopia"},{"code":"fj","alpha_3":"fji","name":"Fiji"},{"code":"fi","alpha_3":"fin","name":"Finland"},{"code":"fr","alpha_3":"fra","name":"France"},{"code":"ga","alpha_3":"gab","name":"Gabon"},{"code":"gm","alpha_3":"gmb","name":"Gambia"},{"code":"ge","alpha_3":"geo","name":"Georgia"},{"code":"de","alpha_3":"deu","name":"Germany"},{"code":"gh","alpha_3":"gha","name":"Ghana"},{"code":"gr","alpha_3":"grc","name":"Greece"},{"code":"gd","alpha_3":"grd","name":"Grenada"},{"code":"gt","alpha_3":"gtm","name":"Guatemala"},{"code":"gn","alpha_3":"gin","name":"Guinea"},{"code":"gw","alpha_3":"gnb","name":"Guinea-Bissau"},{"code":"gy","alpha_3":"guy","name":"Guyana"},{"code":"ht","alpha_3":"hti","name":"Haiti"},{"code":"hn","alpha_3":"hnd","name":"Honduras"},{"code":"hu","alpha_3":"hun","name":"Hungary"},{"code":"is","alpha_3":"isl","name":"Iceland"},{"code":"in","alpha_3":"ind","name":"India"},{"code":"id","alpha_3":"idn","name":"Indonesia"},{"code":"ir","alpha_3":"irn","name":"Iran, Islamic Republic of"},{"code":"iq","alpha_3":"irq","name":"Iraq"},{"code":"ie","alpha_3":"irl","name":"Ireland"},{"code":"il","alpha_3":"isr","name":"Israel"},{"code":"it","alpha_3":"ita","name":"Italy"},{"code":"jm","alpha_3":"jam","name":"Jamaica"},{"code":"jp","alpha_3":"jpn","name":"Japan"},{"code":"jo","alpha_3":"jor","name":"Jordan"},{"code":"kz","alpha_3":"kaz","name":"Kazakhstan"},{"code":"ke","alpha_3":"ken","name":"Kenya"},{"code":"ki","alpha_3":"kir","name":"Kiribati"},{"code":"kp","alpha_3":"prk","name":"Korea, Democratic People''s Republic of"},{"code":"kr","alpha_3":"kor","name":"Korea, Republic of"},{"code":"kw","alpha_3":"kwt","name":"Kuwait"},{"code":"kg","alpha_3":"kgz","name":"Kyrgyzstan"},{"code":"la","alpha_3":"lao","name":"Lao People''s Democratic Republic"},{"code":"lv","alpha_3":"lva","name":"Latvia"},{"code":"lb","alpha_3":"lbn","name":"Lebanon"},{"code":"ls","alpha_3":"lso","name":"Lesotho"},{"code":"lr","alpha_3":"lbr","name":"Liberia"},{"code":"ly","alpha_3":"lby","name":"Libya"},{"code":"li","alpha_3":"lie","name":"Liechtenstein"},{"code":"lt","alpha_3":"ltu","name":"Lithuania"},{"code":"lu","alpha_3":"lux","name":"Luxembourg"},{"code":"mg","alpha_3":"mdg","name":"Madagascar"},{"code":"mw","alpha_3":"mwi","name":"Malawi"},{"code":"my","alpha_3":"mys","name":"Malaysia"},{"code":"mv","alpha_3":"mdv","name":"Maldives"},{"code":"ml","alpha_3":"mli","name":"Mali"},{"code":"mt","alpha_3":"mlt","name":"Malta"},{"code":"mh","alpha_3":"mhl","name":"Marshall Islands"},{"code":"mr","alpha_3":"mrt","name":"Mauritania"},{"code":"mu","alpha_3":"mus","name":"Mauritius"},{"code":"mx","alpha_3":"mex","name":"Mexico"},{"code":"fm","alpha_3":"fsm","name":"Micronesia, Federated States of"},{"code":"md","alpha_3":"mda","name":"Moldova, Republic of"},{"code":"mc","alpha_3":"mco","name":"Monaco"},{"code":"mn","alpha_3":"mng","name":"Mongolia"},{"code":"me","alpha_3":"mne","name":"Montenegro"},{"code":"ma","alpha_3":"mar","name":"Morocco"},{"code":"mz","alpha_3":"moz","name":"Mozambique"},{"code":"mm","alpha_3":"mmr","name":"Myanmar"},{"code":"na","alpha_3":"nam","name":"Namibia"},{"code":"nr","alpha_3":"nru","name":"Nauru"},{"code":"np","alpha_3":"npl","name":"Nepal"},{"code":"nl","alpha_3":"nld","name":"Netherlands"},{"code":"nz","alpha_3":"nzl","name":"New Zealand"},{"code":"ni","alpha_3":"nic","name":"Nicaragua"},{"code":"ne","alpha_3":"ner","name":"Niger"},{"code":"ng","alpha_3":"nga","name":"Nigeria"},{"code":"mk","alpha_3":"mkd","name":"North Macedonia"},{"code":"no","alpha_3":"nor","name":"Norway"},{"code":"om","alpha_3":"omn","name":"Oman"},{"code":"pk","alpha_3":"pak","name":"Pakistan"},{"code":"pw","alpha_3":"plw","name":"Palau"},{"code":"pa","alpha_3":"pan","name":"Panama"},{"code":"pg","alpha_3":"png","name":"Papua New Guinea"},{"code":"py","alpha_3":"pry","name":"Paraguay"},{"code":"pe","alpha_3":"per","name":"Peru"},{"code":"ph","alpha_3":"phl","name":"Philippines"},{"code":"pl","alpha_3":"pol","name":"Poland"},{"code":"pt","alpha_3":"prt","name":"Portugal"},{"code":"qa","alpha_3":"qat","name":"Qatar"},{"code":"ro","alpha_3":"rou","name":"Romania"},{"code":"ru","alpha_3":"rus","name":"Russian Federation"},{"code":"rw","alpha_3":"rwa","name":"Rwanda"},{"code":"kn","alpha_3":"kna","name":"Saint Kitts and Nevis"},{"code":"lc","alpha_3":"lca","name":"Saint Lucia"},{"code":"vc","alpha_3":"vct","name":"Saint Vincent and the Grenadines"},{"code":"ws","alpha_3":"wsm","name":"Samoa"},{"code":"sm","alpha_3":"smr","name":"San Marino"},{"code":"st","alpha_3":"stp","name":"Sao Tome and Principe"},{"code":"sa","alpha_3":"sau","name":"Saudi Arabia"},{"code":"sn","alpha_3":"sen","name":"Senegal"},{"code":"rs","alpha_3":"srb","name":"Serbia"},{"code":"sc","alpha_3":"syc","name":"Seychelles"},{"code":"sl","alpha_3":"sle","name":"Sierra Leone"},{"code":"sg","alpha_3":"sgp","name":"Singapore"},{"code":"sk","alpha_3":"svk","name":"Slovakia"},{"code":"si","alpha_3":"svn","name":"Slovenia"},{"code":"sb","alpha_3":"slb","name":"Solomon Islands"},{"code":"so","alpha_3":"som","name":"Somalia"},{"code":"za","alpha_3":"zaf","name":"South Africa"},{"code":"ss","alpha_3":"ssd","name":"South Sudan"},{"code":"es","alpha_3":"esp","name":"Spain"},{"code":"lk","alpha_3":"lka","name":"Sri Lanka"},{"code":"sd","alpha_3":"sdn","name":"Sudan"},{"code":"sr","alpha_3":"sur","name":"Suriname"},{"code":"se","alpha_3":"swe","name":"Sweden"},{"code":"ch","alpha_3":"che","name":"Switzerland"},{"code":"sy","alpha_3":"syr","name":"Syrian Arab Republic"},{"code":"tj","alpha_3":"tjk","name":"Tajikistan"},{"code":"tz","alpha_3":"tza","name":"Tanzania, United Republic of"},{"code":"th","alpha_3":"tha","name":"Thailand"},{"code":"tl","alpha_3":"tls","name":"Timor-Leste"},{"code":"tg","alpha_3":"tgo","name":"Togo"},{"code":"to","alpha_3":"ton","name":"Tonga"},{"code":"tt","alpha_3":"tto","name":"Trinidad and Tobago"},{"code":"tn","alpha_3":"tun","name":"Tunisia"},{"code":"tr","alpha_3":"tur","name":"T\u00fcrkiye"},{"code":"tm","alpha_3":"tkm","name":"Turkmenistan"},{"code":"tv","alpha_3":"tuv","name":"Tuvalu"},{"code":"ug","alpha_3":"uga","name":"Uganda"},{"code":"ua","alpha_3":"ukr","name":"Ukraine"},{"code":"ae","alpha_3":"are","name":"United Arab Emirates"},{"code":"gb","alpha_3":"gbr","name":"United Kingdom of Great Britain and Northern Ireland"},{"code":"us","alpha_3":"usa","name":"United States of America"},{"code":"uy","alpha_3":"ury","name":"Uruguay"},{"code":"uz","alpha_3":"uzb","name":"Uzbekistan"},{"code":"vu","alpha_3":"vut","name":"Vanuatu"},{"code":"ve","alpha_3":"ven","name":"Venezuela, Bolivarian Republic of"},{"code":"vn","alpha_3":"vnm","name":"Viet Nam"},{"code":"ye","alpha_3":"yem","name":"Yemen"},{"code":"zm","alpha_3":"zmb","name":"Zambia"},{"code":"zw","alpha_3":"zwe","name":"Zimbabwe"}],"currencies":[{"code":"aud","name":"Australian Dollar","symbol":"$","decimal_places":2},{"code":"cad","name":"Canadian Dollar","symbol":"$","decimal_places":2},{"code":"cnh","name":"Chinese Renminbi","symbol":"\u00a5","decimal_places":2},{"code":"eur","name":"Euro","symbol":"\u20ac","decimal_places":2},{"code":"hkd","name":"Hong Kong Dollar","symbol":"$","decimal_places":2},{"code":"jpy","name":"Japanese Yen","symbol":"\u00a5","decimal_places":0},{"code":"nzd","name":"New Zealand Dollar","symbol":"$","decimal_places":2},{"code":"gbp","name":"Pound Sterling","symbol":"\u00a3","decimal_places":2},{"code":"chf","name":"Swiss Franc","symbol":"CHF","decimal_places":2},{"code":"usd","name":"US Dollar","symbol":"$","decimal_places":2}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 46dvb5ga6ehZE3fDPcV1ak8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/session
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1eZa46cPahvb3VgEfd6k85D'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/user/password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      password:
        name: password
        description: ''
        required: true
        example: natus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      new_password:
        name: new_password
        description: 'Must be at least 8 characters.'
        required: true
        example: krypfrgoaumuoferyadyfdqmgouervtzcakucuvzyarjtveqelchtecptnuqgahtkibernm
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      password: natus
      new_password: krypfrgoaumuoferyadyfdqmgouervtzcakucuvzyarjtveqelchtecptnuqgahtkibernm
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer V6aEfed6h4bPZakD15gv38c'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/user/two-factor/default/{method}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      method:
        name: method
        description: ''
        required: true
        example: necessitatibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      method: necessitatibus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fad53kE6ZgbVhv4Dc1a8Pe6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/user/two-factor/destroy/{method}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      method:
        name: method
        description: ''
        required: true
        example: ea
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      method: ea
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer f6abg6E4c5kdeZP3Dv8aV1h'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user/two-factor/backup/show
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer D6h8c5k41bZ3aPdfVvE6gea'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/two-factor/backup/generate
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dhVk66P1Eaf4eD3Zgv5b8ca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/user/two-factor/totp/setup
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer eah16D6kfEdV8Pb4gvcaZ53'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/user/two-factor/totp/enable
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'Must be 6 digits.'
        required: true
        example: '634446'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      code: '634446'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a5gbEa1Z8e4h6Pvdk3Vfc6D'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/user/settings
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      language:
        name: language
        description: ''
        required: false
        example: en
        type: string
        enumValues:
          - de
          - en
        exampleWasSpecified: false
        custom: []
      timezone:
        name: timezone
        description: 'Must be a valid time zone, such as <code>Africa/Accra</code>.'
        required: false
        example: Africa/Addis_Ababa
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      theme:
        name: theme
        description: ''
        required: false
        example: light
        type: string
        enumValues:
          - light
          - dark
          - system
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      language: en
      timezone: Africa/Addis_Ababa
      theme: light
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a66b4kDZf1g8P3dh5cveEaV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/user/settings/{key}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      key:
        name: key
        description: ''
        required: true
        example: company_legalname
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      key: company_legalname
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Ze6ack6DE14g5fabvVd8hP3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/user/name
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      salutation:
        name: salutation
        description: 'Must not be greater than 255 characters.'
        required: false
        example: vhsckyunn
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      prefix:
        name: prefix
        description: 'Must not be greater than 255 characters.'
        required: false
        example: blvleq
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      firstname:
        name: firstname
        description: 'Must not be greater than 255 characters.'
        required: false
        example: nienwnikxiaqdvde
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      middlename:
        name: middlename
        description: 'Must not be greater than 255 characters.'
        required: false
        example: hirll
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      lastname:
        name: lastname
        description: 'Must not be greater than 255 characters.'
        required: false
        example: bjewnxzn
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      suffix:
        name: suffix
        description: 'Must not be greater than 255 characters.'
        required: false
        example: yibhyujtpajerijdnsx
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      nickname:
        name: nickname
        description: 'Must not be greater than 255 characters.'
        required: false
        example: kztkqna
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      salutation: vhsckyunn
      prefix: blvleq
      firstname: nienwnikxiaqdvde
      middlename: hirll
      lastname: bjewnxzn
      suffix: yibhyujtpajerijdnsx
      nickname: kztkqna
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fP5kEhvZga66cab1e3DVd84'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/user/username
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'Must not be greater than 255 characters.'
        required: true
        example: s
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      username: s
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b4e65cafP8dZDEavh1gk63V'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/avatar
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: 'Must be a file. Must not be greater than 10240 kilobytes.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      file: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dkaDE166c8ahgP3fZe5Vb4v'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/banner
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: 'Must be a file. Must not be greater than 10240 kilobytes.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      file: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Eg8ad3k1Zh6cD5b6fa4PeVv'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/debug
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1Pab3D8ceE46g6afvVhZ5kd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/debug/phpinfo
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8fZ4PvEakeh66gabVD3dc51'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/notifications
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6caZafe84b6vDgh1Ek3P5dV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/notifications/read
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      items:
        name: items
        description: ''
        required: true
        example:
          - inventore
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      items:
        - inventore
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DVP16ac3E5baf8dkg4v6eZh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/notifications/unread
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      items:
        name: items
        description: ''
        required: true
        example:
          - officiis
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      items:
        - officiis
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e4Z6VcabdE83DP1vgf6h5ak'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/settings
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      company_name:
        name: company_name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mvqjazkfknxkmasoef
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      company_legalname:
        name: company_legalname
        description: 'Must not be greater than 255 characters.'
        required: false
        example: vjjzanoie
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      company_slogan:
        name: company_slogan
        description: 'Must not be greater than 255 characters.'
        required: false
        example: bdszjueveqklxitvhyxnnor
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      default_currency:
        name: default_currency
        description: ''
        required: false
        example: USD
        type: string
        enumValues:
          - EUR
          - USD
          - GBP
        exampleWasSpecified: false
        custom: []
      default_unit_length:
        name: default_unit_length
        description: ''
        required: false
        example: m
        type: string
        enumValues:
          - m
          - ft
        exampleWasSpecified: false
        custom: []
      default_unit_area:
        name: default_unit_area
        description: ''
        required: false
        example: sqft
        type: string
        enumValues:
          - sqm
          - sqft
        exampleWasSpecified: false
        custom: []
      default_unit_volume:
        name: default_unit_volume
        description: ''
        required: false
        example: gal
        type: string
        enumValues:
          - l
          - gal
        exampleWasSpecified: false
        custom: []
      default_unit_weight:
        name: default_unit_weight
        description: ''
        required: false
        example: kg
        type: string
        enumValues:
          - kg
          - lb
        exampleWasSpecified: false
        custom: []
      default_unit_temperature:
        name: default_unit_temperature
        description: ''
        required: false
        example: f
        type: string
        enumValues:
          - c
          - f
        exampleWasSpecified: false
        custom: []
      default_unit_speed:
        name: default_unit_speed
        description: ''
        required: false
        example: kmh
        type: string
        enumValues:
          - kmh
          - mph
        exampleWasSpecified: false
        custom: []
      policy_allow_registration:
        name: policy_allow_registration
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      policy_allow_password_reset:
        name: policy_allow_password_reset
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      policy_allow_username_change:
        name: policy_allow_username_change
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      policy_allow_name_change:
        name: policy_allow_name_change
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      policy_allow_avatar_upload:
        name: policy_allow_avatar_upload
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      policy_allow_banner_upload:
        name: policy_allow_banner_upload
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      policy_debug_mode:
        name: policy_debug_mode
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      policy_developer_mode:
        name: policy_developer_mode
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      legal_notice:
        name: legal_notice
        description: 'Must not be greater than 255 characters.'
        required: false
        example: pfeuyzjlva
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      legal_privacy:
        name: legal_privacy
        description: 'Must not be greater than 255 characters.'
        required: false
        example: hupftmprtdzeub
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      legal_terms:
        name: legal_terms
        description: 'Must not be greater than 255 characters.'
        required: false
        example: pcdmwstwxjevacy
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      setup_dismissed:
        name: setup_dismissed
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      setup_completed:
        name: setup_completed
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      setup_completed_domain_basics:
        name: setup_completed_domain_basics
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      setup_completed_domain_logo:
        name: setup_completed_domain_logo
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      setup_completed_role_import:
        name: setup_completed_role_import
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      setup_completed_user_import:
        name: setup_completed_user_import
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      setup_completed_admin_selection:
        name: setup_completed_admin_selection
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      registration_profiles:
        name: registration_profiles
        description: ''
        required: false
        example:
          - sunt
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'registration_profiles[].name':
        name: 'registration_profiles[].name'
        description: 'Must not be greater than 255 characters.'
        required: true
        example: nooqyuauxve
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'registration_profiles[].description':
        name: 'registration_profiles[].description'
        description: 'Must not be greater than 255 characters.'
        required: false
        example: 'Quaerat officiis suscipit itaque inventore.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'registration_profiles[].fields':
        name: 'registration_profiles[].fields'
        description: 'Must not be greater than 255 characters.'
        required: true
        example:
          - wspvjzuuioyt
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'registration_profiles[].auto_assign_roles':
        name: 'registration_profiles[].auto_assign_roles'
        description: 'Must not be greater than 255 characters.'
        required: true
        example:
          - knlgivfchkswusra
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'registration_profiles[].groups':
        name: 'registration_profiles[].groups'
        description: 'Must not be greater than 255 characters.'
        required: true
        example:
          - yiovhx
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'registration_profiles[].auto_enable':
        name: 'registration_profiles[].auto_enable'
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      company_name: mvqjazkfknxkmasoef
      company_legalname: vjjzanoie
      company_slogan: bdszjueveqklxitvhyxnnor
      default_currency: USD
      default_unit_length: m
      default_unit_area: sqft
      default_unit_volume: gal
      default_unit_weight: kg
      default_unit_temperature: f
      default_unit_speed: kmh
      policy_allow_registration: true
      policy_allow_password_reset: false
      policy_allow_username_change: false
      policy_allow_name_change: true
      policy_allow_avatar_upload: false
      policy_allow_banner_upload: false
      policy_debug_mode: false
      policy_developer_mode: true
      legal_notice: pfeuyzjlva
      legal_privacy: hupftmprtdzeub
      legal_terms: pcdmwstwxjevacy
      setup_dismissed: true
      setup_completed: false
      setup_completed_domain_basics: false
      setup_completed_domain_logo: false
      setup_completed_role_import: true
      setup_completed_user_import: true
      setup_completed_admin_selection: true
      registration_profiles:
        - sunt
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aPe3k481Vb6vEaZ5D6gdhcf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/settings/logo
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: 'Must be a file. Must not be greater than 10240 kilobytes.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      file: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DkabhVv1d6Pe6fE35gc4aZ8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/permissions
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a6aD5v1bcgkP3Edf4eZh86V'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/roles/basic
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aefD3gh84dv6VkEaZPbc561'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/roles/import
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      items:
        name: items
        description: ''
        required: true
        example:
          - in
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].name':
        name: 'items[].name'
        description: 'Must not be greater than 255 characters.'
        required: true
        example: tvasambrompsmfhtb
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].color':
        name: 'items[].color'
        description: 'Must not be greater than 31 characters.'
        required: false
        example: zxglmxtwwfsua
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].icon':
        name: 'items[].icon'
        description: 'Must not be greater than 63 characters.'
        required: false
        example: hyknimeyjnwiyckfnlayqzaiy
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].guard_name':
        name: 'items[].guard_name'
        description: ''
        required: false
        example: web
        type: string
        enumValues:
          - web
        exampleWasSpecified: false
        custom: []
      'items[].permissions':
        name: 'items[].permissions'
        description: ''
        required: true
        example:
          - quasi
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      items:
        - in
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Pd4cZfg5bVak1hvEae8D366'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/roles
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ids:
        name: ids
        description: ''
        required: true
        example:
          - 3
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      ids:
        - 3
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gaev66hP5a83cfkVE1bD4dZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/roles
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z1835Dg6acvfaEk6d4hVePb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/roles
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: vodqmrpmloptlpkzl
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      color:
        name: color
        description: 'Must not be greater than 31 characters.'
        required: false
        example: olusljndfr
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      icon:
        name: icon
        description: 'Must not be greater than 63 characters.'
        required: false
        example: rqr
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      guard_name:
        name: guard_name
        description: ''
        required: false
        example: web
        type: string
        enumValues:
          - web
        exampleWasSpecified: false
        custom: []
      permissions:
        name: permissions
        description: ''
        required: true
        example:
          - et
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: vodqmrpmloptlpkzl
      color: olusljndfr
      icon: rqr
      guard_name: web
      permissions:
        - et
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 36ZEVagkhevb4cfD1da68P5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/roles/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hed8DP5aVgZf13k4Eav66bc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/roles/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: ipm
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      color:
        name: color
        description: 'Must not be greater than 31 characters.'
        required: false
        example: jisknnxyhpnn
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      icon:
        name: icon
        description: 'Must not be greater than 63 characters.'
        required: false
        example: pcdydqvaapljmqpkrxthh
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      permissions:
        name: permissions
        description: ''
        required: true
        example:
          - dicta
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: ipm
      color: jisknnxyhpnn
      icon: pcdydqvaapljmqpkrxthh
      permissions:
        - dicta
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer eagh34cDvZkPf65a1b68VdE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/roles/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 53dPfZgb1e4a8DavV6cEk6h'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/users/basic
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer daa6VchfEev4ZbP563g18kD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users/import
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      items:
        name: items
        description: ''
        required: true
        example:
          - repellat
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].username':
        name: 'items[].username'
        description: 'Must not be greater than 255 characters.'
        required: false
        example: ecefzupzttballnzqnier
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].email':
        name: 'items[].email'
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: false
        example: rhodkiewicz@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].phone':
        name: 'items[].phone'
        description: 'Must not be greater than 255 characters.'
        required: false
        example: dtfadjdjeststkqd
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].password':
        name: 'items[].password'
        description: 'Must not be greater than 255 characters.'
        required: false
        example: 'Th,9!A{QEMa(p\S'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].email_verified_at':
        name: 'items[].email_verified_at'
        description: 'Must be a valid date.'
        required: false
        example: '2025-03-14T16:38:43'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].phone_verified_at':
        name: 'items[].phone_verified_at'
        description: 'Must be a valid date.'
        required: false
        example: '2025-03-14T16:38:43'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].enabled_at':
        name: 'items[].enabled_at'
        description: 'Must be a valid date.'
        required: false
        example: '2025-03-14T16:38:43'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].salutation':
        name: 'items[].salutation'
        description: 'Must not be greater than 255 characters.'
        required: false
        example: guwu
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].prefix':
        name: 'items[].prefix'
        description: 'Must not be greater than 255 characters.'
        required: false
        example: xqkwiulgifubuzm
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].firstname':
        name: 'items[].firstname'
        description: 'Must not be greater than 255 characters.'
        required: false
        example: nffclmgzrfvbpooxqyupu
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].middlename':
        name: 'items[].middlename'
        description: 'Must not be greater than 255 characters.'
        required: false
        example: pttwwnkhodohzzsptoot
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].lastname':
        name: 'items[].lastname'
        description: 'Must not be greater than 255 characters.'
        required: false
        example: nhpqsvrvnctglrsfeyvetstfs
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].suffix':
        name: 'items[].suffix'
        description: 'Must not be greater than 255 characters.'
        required: false
        example: wibtkjeubyrgqpslxxqf
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].legalname':
        name: 'items[].legalname'
        description: 'Must not be greater than 255 characters.'
        required: false
        example: eyxfhkfmhqre
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].nickname':
        name: 'items[].nickname'
        description: 'Must not be greater than 255 characters.'
        required: false
        example: gjncosjlxmnlqdtfmattygqc
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].organisation':
        name: 'items[].organisation'
        description: 'Must not be greater than 255 characters.'
        required: false
        example: rraofqtjufikcjmcqoxkv
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].department':
        name: 'items[].department'
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mdchotwogstezwhwd
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].job_title':
        name: 'items[].job_title'
        description: 'Must not be greater than 255 characters.'
        required: false
        example: ofbhrgjmuqixopektpaih
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].customer_id':
        name: 'items[].customer_id'
        description: 'Must not be greater than 255 characters.'
        required: false
        example: skizascju
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].employee_id':
        name: 'items[].employee_id'
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mvxvagpbcfzionnhbtj
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].member_id':
        name: 'items[].member_id'
        description: 'Must not be greater than 255 characters.'
        required: false
        example: vvoljvvxtylzt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].notes':
        name: 'items[].notes'
        description: 'Must not be greater than 1023 characters.'
        required: false
        example: bwoweesyvohjvvhp
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'items[].roles':
        name: 'items[].roles'
        description: ''
        required: true
        example:
          - non
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      items:
        - repellat
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5Phk61aaDc4fevgEZVbd836'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/users/{user_id}/avatar'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: 'Must be a file. Must not be greater than 10240 kilobytes.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      file: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ce3kh6f56dgZEDab184vPaV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/users/{user_id}/banner'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: 'Must be a file. Must not be greater than 10240 kilobytes.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      file: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a8Zk6Va14fd6bD5Egh3Pevc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/users/{user_id}/password'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: 'cJ,;/uqr"W%J)N*o;i%*'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      password: 'cJ,;/uqr"W%J)N*o;i%*'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3Vvk4aPeEdgh185Db6acf6Z'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/users/{user_id}/require-password-change'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      requires_password_change:
        name: requires_password_change
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      requires_password_change: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vf1VZ8g634chea56PbDdEka'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/users/{user_id}/require-two-factor'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      requires_two_factor:
        name: requires_two_factor
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      requires_two_factor: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VD5EPea6c3kfh6b4a8vZ1gd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/users/{user_id}/send-verification-email'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer eVgZ314h8c6Pbv65DakfdEa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/users/{user_id}/verify-email'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email_verified:
        name: email_verified
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email_verified: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cv8361deaVZED5bkhP4ga6f'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/users/{user_id}/verify-phone'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      phone_verified:
        name: phone_verified
        description: ''
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      phone_verified: true
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kD5va1gEbP6f84eV63chZad'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/users/{user_id}/enable'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      enabled:
        name: enabled
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      enabled: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kaEcvf5hd3D6ZaP6e8gb1V4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/users/{user_id}/block'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      blocked:
        name: blocked
        description: ''
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      block_reason:
        name: block_reason
        description: ''
        required: false
        example: sequi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      blocked: true
      block_reason: sequi
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer V4cgkh1fe6Z85aaEP3Dv6bd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/users/{user_id}/token'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: nrihrdxwcvfrzvccazurprk
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: nrihrdxwcvfrzvccazurprk
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z6Dbf5aahgvV8ed6PE14kc3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{user_id}/token/{token}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      token:
        name: token
        description: 'The token.'
        required: true
        example: eos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
      token: eos
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer abvf4Pg58D6ZE61hde3Vakc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/users/roles
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      items:
        name: items
        description: ''
        required: true
        example:
          - itaque
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      roles:
        name: roles
        description: ''
        required: true
        example:
          - magni
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      items:
        - itaque
      roles:
        - magni
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PE5ZdVbvDk8c66aaf1e3g4h'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/users/roles
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      items:
        name: items
        description: ''
        required: true
        example:
          - molestiae
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      roles:
        name: roles
        description: ''
        required: true
        example:
          - ea
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      items:
        - molestiae
      roles:
        - ea
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1de5afc66g8vVh34EbZkDaP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ids:
        name: ids
        description: ''
        required: true
        example:
          - 18
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      ids:
        - 18
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vPkh1V8D43bdZegE5f66caa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/users/force
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ids:
        name: ids
        description: ''
        required: true
        example:
          - 1
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      ids:
        - 1
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer va38ZchebVEP64kd6Dag1f5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/users/restore
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ids:
        name: ids
        description: ''
        required: true
        example:
          - 1
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      ids:
        - 1
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6Ev61gbc5PZahkfVe4dD8a3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 134856kdEaeZacbvf6DgVPh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mioziikytbsen
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: false
        example: loraine.pfannerstill@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      phone:
        name: phone
        description: 'Must not be greater than 255 characters.'
        required: false
        example: pfiwxbjxrvnpu
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      salutation:
        name: salutation
        description: 'Must not be greater than 255 characters.'
        required: false
        example: emxahafw
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      prefix:
        name: prefix
        description: 'Must not be greater than 255 characters.'
        required: false
        example: ap
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      firstname:
        name: firstname
        description: 'Must not be greater than 255 characters.'
        required: false
        example: hhbievuklrgpuu
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      middlename:
        name: middlename
        description: 'Must not be greater than 255 characters.'
        required: false
        example: iqumozhv
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      lastname:
        name: lastname
        description: 'Must not be greater than 255 characters.'
        required: false
        example: fwss
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      suffix:
        name: suffix
        description: 'Must not be greater than 255 characters.'
        required: false
        example: pnmcdwvdcsjiwoutuwv
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      legalname:
        name: legalname
        description: 'Must not be greater than 255 characters.'
        required: false
        example: asqetbjevigftfimwbn
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      nickname:
        name: nickname
        description: 'Must not be greater than 255 characters.'
        required: false
        example: dirtqtiohtaywylmdwjidsoxj
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      organisation:
        name: organisation
        description: 'Must not be greater than 255 characters.'
        required: false
        example: g
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      department:
        name: department
        description: 'Must not be greater than 255 characters.'
        required: false
        example: nwhdprqufncmeosxvnf
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      job_title:
        name: job_title
        description: 'Must not be greater than 255 characters.'
        required: false
        example: udnl
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      customer_id:
        name: customer_id
        description: 'Must not be greater than 255 characters.'
        required: false
        example: pkykuitwnihfkeexvq
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      employee_id:
        name: employee_id
        description: 'Must not be greater than 255 characters.'
        required: false
        example: 'y'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      member_id:
        name: member_id
        description: 'Must not be greater than 255 characters.'
        required: false
        example: nk
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      notes:
        name: notes
        description: 'Must not be greater than 1023 characters.'
        required: false
        example: zvqikdcisifjzqdkrwop
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      main_address:
        name: main_address
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      billing_address:
        name: billing_address
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      shipping_address:
        name: shipping_address
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      username: mioziikytbsen
      email: loraine.pfannerstill@example.net
      phone: pfiwxbjxrvnpu
      salutation: emxahafw
      prefix: ap
      firstname: hhbievuklrgpuu
      middlename: iqumozhv
      lastname: fwss
      suffix: pnmcdwvdcsjiwoutuwv
      legalname: asqetbjevigftfimwbn
      nickname: dirtqtiohtaywylmdwjidsoxj
      organisation: g
      department: nwhdprqufncmeosxvnf
      job_title: udnl
      customer_id: pkykuitwnihfkeexvq
      employee_id: 'y'
      member_id: nk
      notes: zvqikdcisifjzqdkrwop
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dZe4aED6bk3Vh61gvf8Pa5c'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer h6vaDPV3bf4Eac86kd51Zeg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/upload
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      files:
        name: files
        description: 'Must be a file.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      path:
        name: path
        description: 'Must not be greater than 255 characters.'
        required: true
        example: iejbzjozxtippzuumgkdiyk
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      path: iejbzjozxtippzuumgkdiyk
    fileParameters:
      files:
        - null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer D51fdEvkea6hcVP36Za8gb4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/directory
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: hynpjlsmru
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      path:
        name: path
        description: 'Must not be greater than 255 characters.'
        required: true
        example: tsqtkdyxrexwhqce
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: hynpjlsmru
      path: tsqtkdyxrexwhqce
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a5ZV6fk1vbdec6a4DhgEP38'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/media/copy
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      paths:
        name: paths
        description: 'Must not be greater than 255 characters.'
        required: true
        example:
          - uhojfacxrkbwb
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      destination:
        name: destination
        description: 'Must not be greater than 255 characters.'
        required: true
        example: wer
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      paths:
        - uhojfacxrkbwb
      destination: wer
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vaZf5dD3kae6g18b4P6EcVh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/media/share
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      path:
        name: path
        description: ''
        required: true
        example: deserunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      inherit_access:
        name: inherit_access
        description: ''
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      public_access:
        name: public_access
        description: ''
        required: false
        example: read
        type: string
        enumValues:
          - read
          - write
          - admin
        exampleWasSpecified: false
        custom: []
      access:
        name: access
        description: ''
        required: false
        example:
          - nihil
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'access[].permissible_id':
        name: 'access[].permissible_id'
        description: ''
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'access[].permissible_type':
        name: 'access[].permissible_type'
        description: ''
        required: true
        example: role
        type: string
        enumValues:
          - user
          - role
        exampleWasSpecified: false
        custom: []
      'access[].permission':
        name: 'access[].permission'
        description: ''
        required: true
        example: admin
        type: string
        enumValues:
          - read
          - write
          - admin
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      path: deserunt
      inherit_access: true
      public_access: read
      access:
        - nihil
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 46Edbv6Ze5k813fcVahPagD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/media/move
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      paths:
        name: paths
        description: 'Must not be greater than 255 characters.'
        required: true
        example:
          - dkdjtpguazwftroabnj
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      destination:
        name: destination
        description: 'Must not be greater than 255 characters.'
        required: true
        example: ykxprnmvbnubkyoouonni
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      paths:
        - dkdjtpguazwftroabnj
      destination: ykxprnmvbnubkyoouonni
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer agved4bZ8aPkV16f5EDc6h3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/media/rename
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      path:
        name: path
        description: 'Must not be greater than 255 characters.'
        required: true
        example: ysemodfbyonqykcuksaycosr
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: lss
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      path: ysemodfbyonqykcuksaycosr
      name: lss
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3cZbe1fa4va8566dkDEPhgV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/media
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      paths:
        name: paths
        description: 'Must not be greater than 255 characters.'
        required: true
        example:
          - vxqsepiyaws
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      paths:
        - vxqsepiyaws
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5P3eZcad8v6bkga6E4Vf1hD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/media/repair
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      action:
        name: action
        description: ''
        required: true
        example: discover
        type: string
        enumValues:
          - discover
        exampleWasSpecified: false
        custom: []
      path:
        name: path
        description: ''
        required: true
        example: sapiente
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      action: discover
      path: sapiente
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gP4V683edv5bcf1aa6hkEDZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'media/{path}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      path:
        name: path
        description: ''
        required: true
        example: '!'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      path: '!'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"http:\/\/localhost:8000\/media\/!?page=1","last":"http:\/\/localhost:8000\/media\/!?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost:8000\/media\/!?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost:8000\/media\/!","per_page":20,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          set-cookie: 'XSRF-TOKEN=eyJpdiI6Im1QR0VUWjRHYWNIenFlMlhrTmp2cXc9PSIsInZhbHVlIjoiYXFzelM2S1NPYzYwa3BiZEt5Vm0xS00wYnVJb0dpRGhYN3ViRUw0dUFpZWhUUDhwU2VIb3ZaMmptdXVubGJVejhDL0lQZkdqMUdTNnZrYWEweFdTRGhqY2RwUDJmcTdUdG9BSWpjYjBGanV3WDdRQi9KenJHaGF6MVIvSU4wVVkiLCJtYWMiOiJkZTZmOGY5MmE3MjI0MGNmYjViN2I2Y2EyYzE4MmY4MmE3Yzk5YTBhNmFjYWZjNjkwYzY3NzlkN2JhZjcxYzlkIiwidGFnIjoiIn0%3D; expires=Fri, 14 Mar 2025 18:38:43 GMT; Max-Age=7200; path=/; domain=localhost; samesite=lax; helium_session=eyJpdiI6IkJVNURzZUhRbDRCS2UyMlEwWURWZWc9PSIsInZhbHVlIjoiRXJEMmVseGhLNGF6VmErMHhoUHVQbHN5bko4VVpqMml6eDJ0dVY0QU0wMUdwQUFzSlMyNzJjM1ZmY21FMVdrSEdSVWtoNHlpem14UDNhdG4xZmFBUjRBUnVMeGpuYjlYYXN1K2tnSGp0enJxVEF3OWkrNEJOUE9VQ2JQRWI1UmkiLCJtYWMiOiJjZmE1ZmRmYjBjYzlhOTkwYmMzNjQyMzE4OTUyNWJkYTRhZjA0ZWQxMTY3NWYzYTU4ZDhjYmMxN2UzNGFjZmMxIiwidGFnIjoiIn0%3D; expires=Fri, 14 Mar 2025 18:38:43 GMT; Max-Age=7200; path=/; domain=localhost; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer V6E3DaekdcPfb6Z4gahv851'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Handle an incoming authentication request.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      login:
        name: login
        description: ''
        required: true
        example: a
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: "o'%Jw1Ys3boojL3"
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      login: a
      password: "o'%Jw1Ys3boojL3"
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ca4bhfvD1kV3ge8P5a66EZd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: forgot-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Handle an incoming password reset link request.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: mosciski.bradford@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: mosciski.bradford@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer P46vcaEVdbD3Z1ef6ah8gk5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: reset-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Handle an incoming new password request.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      token:
        name: token
        description: ''
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: rubye83@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      token: ut
      email: rubye83@example.org
      password: qui
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer EDfah4bde6Z15V638gPvack'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'verify-email/{id}/{hash}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Mark the authenticated user's email address as verified."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the verify email.'
        required: true
        example: eligendi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      hash:
        name: hash
        description: ''
        required: true
        example: excepturi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: eligendi
      hash: excepturi
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          set-cookie: 'XSRF-TOKEN=eyJpdiI6Ik9LYlV5Z3ZuNkF2M2JEcUhyUG9LVVE9PSIsInZhbHVlIjoiTGMwWWN4eXJKSFVNZ0k0UjNub3N5eEZiTUVleFN5VHk1R2ZMZ1ZwUEpyQTVLUEhwMG1ScFR6YWpjZ2xHdGpFck84UEozc3E3TG0vc3ErMExybUZJSEo4cXoyU3VSMkRwSGdjVkVKbUxObkEvRlVmYTJ1UGdiN09wWm1yV0RZWmkiLCJtYWMiOiIzODBkMDIxZmQ1Mjg4N2IzZWNjNWIyZDkxMzA5NzIxZTNjYjA1ZTNlYjhhMjQwOGI1MGI4NjU2NzQ4MWVjMGJmIiwidGFnIjoiIn0%3D; expires=Fri, 14 Mar 2025 18:38:43 GMT; Max-Age=7200; path=/; domain=localhost; samesite=lax; helium_session=eyJpdiI6IkI3RUFGUW5tWWRhb3JMeFBPclVsQUE9PSIsInZhbHVlIjoiYmxDWmo4UUlTMTdITVNYaXNhaHd6NkZodUMwdXdjUXlGV09POWJIcGx4cWt6TlUvYTdCc0tSQTFGSGdIWHplaTlnRnRiSEZhNUZkTFMxM0ZwamVrRGEwK3o3SlhrVFJPdlhiRUpGcHIweHEvblM4dy9WRk05bkhYNmdYSUQ2RWkiLCJtYWMiOiI3MzcxZWUxYjczMTU5NGZkMWYyYWJhMGE3M2NkMDlmNzkyMzI4MzBhZmNmZmQ4MDM4ZGJkOGVhMzRlMGJkNjkxIiwidGFnIjoiIn0%3D; expires=Fri, 14 Mar 2025 18:38:43 GMT; Max-Age=7200; path=/; domain=localhost; httponly; samesite=lax'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3gdfDbea1a4865Vkhv6cPEZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: email/verification-notification
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Send a new email verification notification.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer edZ58VkDPbcag61h3vfa46E'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: verify-tfa-totp
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'Must be 6 digits.'
        required: true
        example: '365971'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      code: '365971'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aP3fv66hb14gDVaZEkd8c5e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: verify-tfa-backup
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'Must be 8 characters.'
        required: true
        example: qpyvfghm
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      code: qpyvfghm
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6dkah841bcZV5gaEDP36evf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Destroy an authenticated session.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer P8gZDeE6aa1h65V4k3fvdcb'
    controller: null
    method: null
    route: null
    custom: []
